function x(){}function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function C(){return Object.create(null)}function j(t){t.forEach(w)}function M(t){return typeof t=="function"}function U(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function A(t){return Object.keys(t).length===0}function E(t,...n){if(t==null){for(const o of n)o(void 0);return x}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function B(t,n,e){t.$$.on_destroy.push(E(n,e))}function D(t,n,e,o){if(t){const r=y(t,n,e,o);return t[0](r)}}function y(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function F(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const l=[],d=Math.max(n.dirty.length,r.length);for(let a=0;a<d;a+=1)l[a]=n.dirty[a]|r[a];return l}return n.dirty|r}return n.dirty}function P(t,n,e,o,r,l){if(r){const d=y(n,e,o,l);t.p(d,r)}}function S(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let f;function _(t){f=t}function u(){if(!f)throw new Error("Function called outside component initialization");return f}function G(t){u().$$.before_update.push(t)}function H(t){u().$$.on_mount.push(t)}function I(t){u().$$.after_update.push(t)}function J(t){u().$$.on_destroy.push(t)}function K(t,n){return u().$$.context.set(t,n),n}function L(t){return u().$$.context.get(t)}const i=[],b=[];let s=[];const g=[],m=Promise.resolve();let p=!1;function v(){p||(p=!0,m.then(q))}function N(){return v(),m}function O(t){s.push(t)}const h=new Set;let c=0;function q(){if(c!==0)return;const t=f;do{try{for(;c<i.length;){const n=i[c];c++,_(n),z(n.$$)}}catch(n){throw i.length=0,c=0,n}for(_(null),i.length=0,c=0;b.length;)b.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];h.has(e)||(h.add(e),e())}s.length=0}while(i.length);for(;g.length;)g.pop()();p=!1,h.clear(),_(t)}function z(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function Q(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{i as A,v as B,I as a,b,D as c,F as d,G as e,B as f,S as g,J as h,E as i,M as j,L as k,K as l,C as m,x as n,H as o,q as p,A as q,j as r,U as s,N as t,P as u,O as v,Q as w,f as x,_ as y,w as z};
