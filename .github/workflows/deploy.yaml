name: Build & Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15.4
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      cache:
        image: redis:7.2
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.17'

      - name: Build App
        run: make all
        env:
          DB_TEST_URL: 'postgres://postgres:example@localhost:5432/test_db?sslmode=disable'
          REDIS_URL: 'redis://localhost:6379?protocol=3'
          TOKEN_SECRET: 'super_secret' # used just for testing
          PUBLIC_ACKE_SERVER: ${{ vars.PUBLIC_ACKE_SERVER }}
          PUBLIC_ACKE_DOMAIN_ID: ${{ vars.PUBLIC_ACKE_DOMAIN_ID }}
          PUBLIC_API_ENDPOINT: ${{ vars.PUBLIC_API_ENDPOINT }}

      - name: Run backend tests
        run: go test ./...
        env:
          DB_TEST_URL: 'postgres://postgres:example@localhost:5432/test_db?sslmode=disable'
          REDIS_URL: 'redis://localhost:6379?protocol=3'
          TOKEN_SECRET: 'super_secret' # used just for testing

  deploy-develop:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy to Railway Develop
        run: railway up -s portfolio
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_DEPLOY_DEV }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy to Railway Production
        run: railway up -s portfolio
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_DEPLOY_PROD }}
